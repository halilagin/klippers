/* tslint:disable */
/* eslint-disable */
/**
 * OXSign API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PDFFile
 */
export interface PDFFile {
    /**
     * 
     * @type {string}
     * @memberof PDFFile
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PDFFile
     */
    documentId: string;
    /**
     * 
     * @type {Blob}
     * @memberof PDFFile
     */
    fileData: Blob;

    /**
     * 
     * @type {string}
     * @memberof PDFFile
     */
    fileDataBase64: string;
    /**
     * 
     * @type {number}
     * @memberof PDFFile
     */
    fileSize: number;
    /**
     * 
     * @type {number}
     * @memberof PDFFile
     */
    version?: number;
    /**
     * 
     * @type {Date}
     * @memberof PDFFile
     */
    uploadedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PDFFile
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PDFFile
     */
    completedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PDFFile
     */
    md5Hash: string;
    /**
     * 
     * @type {object}
     * @memberof PDFFile
     */
    metaData?: object;
}

/**
 * Check if a given object implements the PDFFile interface.
 */
export function instanceOfPDFFile(value: object): value is PDFFile {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('documentId' in value) || value['documentId'] === undefined) return false;
    if (!('fileData' in value) || value['fileData'] === undefined) return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined) return false;
    if (!('uploadedAt' in value) || value['uploadedAt'] === undefined) return false;
    if (!('md5Hash' in value) || value['md5Hash'] === undefined) return false;
    return true;
}

export function PDFFileFromJSON(json: any): PDFFile {
    return PDFFileFromJSONTyped(json, false);
}

export function PDFFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): PDFFile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'documentId': json['document_id'],
        'fileData': json['file_data'],
        'fileSize': json['file_size'],
        'fileDataBase64': json['file_data_base64'],
        'version': json['version'] == null ? undefined : json['version'],
        'uploadedAt': (new Date(json['uploaded_at'])),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'completedAt': json['completed_at'] == null ? undefined : (new Date(json['completed_at'])),
        'md5Hash': json['md5_hash'],
        'metaData': json['meta_data'] == null ? undefined : json['meta_data'],
    };
}

export function PDFFileToJSON(json: any): PDFFile {
    return PDFFileToJSONTyped(json, false);
}

export function PDFFileToJSONTyped(value?: PDFFile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'document_id': value['documentId'],
        'file_data': value['fileData'],
        'file_size': value['fileSize'],
        'version': value['version'],
        'uploaded_at': ((value['uploadedAt']).toISOString()),
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'completed_at': value['completedAt'] == null ? undefined : ((value['completedAt'] as any).toISOString()),
        'md5_hash': value['md5Hash'],
        'meta_data': value['metaData'],
    };
}

