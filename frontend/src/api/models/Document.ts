/* tslint:disable */
/* eslint-disable */
/**
 * OXSign API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Signer } from './Signer';
import {
    SignerFromJSON,
    SignerFromJSONTyped,
    SignerToJSON,
    SignerToJSONTyped,
} from './Signer';
import type { PDFFile } from './PDFFile';
import {
    PDFFileFromJSON,
    PDFFileFromJSONTyped,
    PDFFileToJSON,
    PDFFileToJSONTyped,
} from './PDFFile';
// import type { SignatureAudit } from '@api/models/SignatureAudit';
import {
    SignatureAudit,
    SignatureAuditFromJSON,
    SignatureAuditFromJSONTyped,
    SignatureAuditToJSON,
    SignatureAuditToJSONTyped,
} from './SignatureAudit';

/**
 * 
 * @export
 * @interface Document
 */
export interface Document {
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    status?: string;
    /**
     * 
     * @type {Date}
     * @memberof Document
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Document
     */
    expiresAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    createdBy: string;
    /**
     * 
     * @type {object}
     * @memberof Document
     */
    metaData?: object;
    /**
     * 
     * @type {Array<Signer>}
     * @memberof Document
     */
    signers?: Array<Signer>;
    /**
     * 
     * @type {Array<SignatureAudit>}
     * @memberof Document
     */
    auditTrail?: Array<SignatureAudit>;
    /**
     * 
     * @type {PDFFile}
     * @memberof Document
     */
    pdfFile?: PDFFile | null;
}

/**
 * Check if a given object implements the Document interface.
 */
export function instanceOfDocument(value: object): value is Document {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    return true;
}

export function DocumentFromJSON(json: any): Document {
    return DocumentFromJSONTyped(json, false);
}

export function DocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Document {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['user_id'],
        'title': json['title'],
        'status': json['status'] == null ? undefined : json['status'],
        'createdAt': (new Date(json['created_at'])),
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
        'createdBy': json['created_by'],
        'metaData': json['meta_data'] == null ? undefined : json['meta_data'],
        'signers': json['signers'] == null ? undefined : ((json['signers'] as Array<any>).map(SignerFromJSON)),
        'auditTrail': json['audit_trail'] == null ? undefined : ((json['audit_trail'] as Array<SignatureAudit>).map(SignatureAuditFromJSON)),
        'pdfFile': json['pdf_file'] == null ? undefined : PDFFileFromJSON(json['pdf_file']),
    };
}

export function DocumentToJSON(json: any): Document {
    return DocumentToJSONTyped(json, false);
}

export function DocumentToJSONTyped(value?: Document | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_id': value['userId'],
        'title': value['title'],
        'status': value['status'],
        'created_at': ((value['createdAt']).toISOString()),
        'expires_at': value['expiresAt'] == null ? undefined : ((value['expiresAt'] as any).toISOString()),
        'created_by': value['createdBy'],
        'meta_data': value['metaData'],
        'signers': value['signers'] == null ? undefined : ((value['signers'] as Array<any>).map(SignerToJSON)),
        'audit_trail': value['auditTrail'] == null ? undefined : ((value['auditTrail'] as Array<any>).map(SignatureAuditToJSON)),
        'pdf_file': PDFFileToJSON(value['pdfFile']),
    };
}

export interface SignaturePlacement {
  id: string;
  signer_id: string;
  page: number;
  x: number;
  y: number;
  width: number;
  height: number;
  signature_image_base64: string;
}




