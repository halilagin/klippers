/* tslint:disable */
/* eslint-disable */
/**
 * OXSign API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SignatureAudit
 */
export interface SignatureAudit {
    /**
     * 
     * @type {string}
     * @memberof SignatureAudit
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SignatureAudit
     */
    documentId: string;
    /**
     * 
     * @type {string}
     * @memberof SignatureAudit
     */
    signerEmail: string;
    /**
     * 
     * @type {string}
     * @memberof SignatureAudit
     */
    signerId: string;
    /**
     * 
     * @type {string}
     * @memberof SignatureAudit
     */
    signerName: string;
    /**
     * 
     * @type {string}
     * @memberof SignatureAudit
     */
    action: string;
    /**
     * 
     * @type {Date}
     * @memberof SignatureAudit
     */
    timestamp: Date;
    /**
     * 
     * @type {string}
     * @memberof SignatureAudit
     */
    ipAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignatureAudit
     */
    userAgent?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof SignatureAudit
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the SignatureAudit interface.
 */
export function instanceOfSignatureAudit(value: object): value is SignatureAudit {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('documentId' in value) || value['documentId'] === undefined) return false;
    if (!('signerEmail' in value) || value['signerEmail'] === undefined) return false;
    if (!('signerId' in value) || value['signerId'] === undefined) return false;
    if (!('signerName' in value) || value['signerName'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function SignatureAuditFromJSON(json: any): SignatureAudit {
    return SignatureAuditFromJSONTyped(json, false);
}

export function SignatureAuditFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignatureAudit {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'documentId': json['document_id'],
        'signerEmail': json['signer_email'],
        'signerId': json['signer_id'],
        'signerName': json['signer_name'],
        'action': json['action'],
        'timestamp': (new Date(json['timestamp'])),
        'ipAddress': json['ip_address'] == null ? undefined : json['ip_address'],
        'userAgent': json['user_agent'] == null ? undefined : json['user_agent'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
    };
}

export function SignatureAuditToJSON(json: any): SignatureAudit {
    return SignatureAuditToJSONTyped(json, false);
}

export function SignatureAuditToJSONTyped(value?: SignatureAudit | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'document_id': value['documentId'],
        'signer_email': value['signerEmail'],
        'signer_id': value['signerId'],
        'signer_name': value['signerName'],
        'action': value['action'],
        'timestamp': ((value['timestamp']).toISOString()),
        'ip_address': value['ipAddress'],
        'user_agent': value['userAgent'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

