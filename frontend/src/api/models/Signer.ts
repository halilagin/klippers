/* tslint:disable */
/* eslint-disable */
/**
 * OXSign API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SignatureInPDF } from './SignatureInPDF';
import {
    SignatureInPDFFromJSON,
    SignatureInPDFFromJSONTyped,
    SignatureInPDFToJSON,
    SignatureInPDFToJSONTyped,
} from './SignatureInPDF';

/**
 * 
 * @export
 * @interface Signer
 */
export interface Signer {
    /**
     * 
     * @type {string}
     * @memberof Signer
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Signer
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof Signer
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Signer
     */
    order?: number;
    /**
     * 
     * @type {Date}
     * @memberof Signer
     */
    signedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Signer
     */
    documentId: string;
    /**
     * 
     * @type {Array<SignatureField>}
     * @memberof Signer
     */
    signatureFields?: Array<SignatureInPDF>;
}

/**
 * Check if a given object implements the Signer interface.
 */
export function instanceOfSigner(value: object): value is Signer {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('documentId' in value) || value['documentId'] === undefined) return false;
    return true;
}

export function SignerFromJSON(json: any): Signer {
    return SignerFromJSONTyped(json, false);
}

export function SignerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Signer {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'email': json['email'],
        'name': json['name'],
        'order': json['order'] == null ? undefined : json['order'],
        'signedAt': json['signed_at'] == null ? undefined : (new Date(json['signed_at'])),
        'documentId': json['document_id'],
        'signatureFields': json['signature_fields'] == null ? undefined : ((json['signature_fields'] as Array<any>).map(SignatureInPDFFromJSON)),
    };
}

export function SignerToJSON(json: any): Signer {
    return SignerToJSONTyped(json, false);
}

export function SignerToJSONTyped(value?: Signer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'email': value['email'],
        'name': value['name'],
        'order': value['order'],
        'signed_at': value['signedAt'] == null ? undefined : ((value['signedAt'] as any).toISOString()),
        'document_id': value['documentId'],
        'signature_fields': value['signatureFields'] == null ? undefined : ((value['signatureFields'] as Array<any>).map(SignatureInPDFToJSON)),
    };
}

export default Signer

