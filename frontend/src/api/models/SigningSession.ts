/* tslint:disable */
/* eslint-disable */
/**
 * OXSign API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SigningSession
 */
export interface SigningSession {
    /**
     * 
     * @type {string}
     * @memberof SigningSession
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SigningSession
     */
    documentId: string;
    /**
     * 
     * @type {string}
     * @memberof SigningSession
     */
    signerEmail: string;
    /**
     * 
     * @type {Date}
     * @memberof SigningSession
     */
    expiresAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SigningSession
     */
    ipAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SigningSession
     */
    userAgent?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof SigningSession
     */
    uploadedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof SigningSession
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SigningSession
     */
    status?: string;
    /**
     * 
     * @type {Date}
     * @memberof SigningSession
     */
    completedAt?: Date | null;
}

/**
 * Check if a given object implements the SigningSession interface.
 */
export function instanceOfSigningSession(value: object): value is SigningSession {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('documentId' in value) || value['documentId'] === undefined) return false;
    if (!('signerEmail' in value) || value['signerEmail'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    return true;
}

export function SigningSessionFromJSON(json: any): SigningSession {
    return SigningSessionFromJSONTyped(json, false);
}

export function SigningSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SigningSession {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'documentId': json['document_id'],
        'signerEmail': json['signer_email'],
        'expiresAt': (new Date(json['expires_at'])),
        'ipAddress': json['ip_address'] == null ? undefined : json['ip_address'],
        'userAgent': json['user_agent'] == null ? undefined : json['user_agent'],
        'uploadedAt': json['uploaded_at'] == null ? undefined : (new Date(json['uploaded_at'])),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'status': json['status'] == null ? undefined : json['status'],
        'completedAt': json['completed_at'] == null ? undefined : (new Date(json['completed_at'])),
    };
}

export function SigningSessionToJSON(json: any): SigningSession {
    return SigningSessionToJSONTyped(json, false);
}

export function SigningSessionToJSONTyped(value?: SigningSession | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'document_id': value['documentId'],
        'signer_email': value['signerEmail'],
        'expires_at': ((value['expiresAt']).toISOString()),
        'ip_address': value['ipAddress'],
        'user_agent': value['userAgent'],
        'uploaded_at': value['uploadedAt'] == null ? undefined : ((value['uploadedAt'] as any).toISOString()),
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'status': value['status'],
        'completed_at': value['completedAt'] == null ? undefined : ((value['completedAt'] as any).toISOString()),
    };
}

