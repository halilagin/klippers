/* tslint:disable */
/* eslint-disable */
/**
 * OXSign API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SignatureInPDF
 */
export interface SignatureInPDF {
    /**
     * 
     * @type {string}
     * @memberof SignatureInPDF
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SignatureInPDF
     */
    pdfFileId: string;
    /**
     * 
     * @type {string}
     * @memberof SignatureInPDF
     */
    signerId: string;
    /**
     * 
     * @type {number}
     * @memberof SignatureInPDF
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof SignatureInPDF
     */
    x: number;
    /**
     * 
     * @type {number}
     * @memberof SignatureInPDF
     */
    y: number;
    /**
     * 
     * @type {number}
     * @memberof SignatureInPDF
     */
    width: number;
    /**
     * 
     * @type {number}
     * @memberof SignatureInPDF
     */
    height: number;
    /**
     * 
     * @type {Blob}
     * @memberof SignatureInPDF
     */
    signatureImage: string;
    /**
     * 
     * @type {Date}
     * @memberof SignatureInPDF
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SignatureInPDF
     */
    uploadedAt: Date;

    signType: string;
    signed: boolean;
}

/**
 * Check if a given object implements the SignatureInPDF interface.
 */
export function instanceOfSignatureInPDF(value: object): value is SignatureInPDF {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('pdfFileId' in value) || value['pdfFileId'] === undefined) return false;
    if (!('signerId' in value) || value['signerId'] === undefined) return false;
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('x' in value) || value['x'] === undefined) return false;
    if (!('y' in value) || value['y'] === undefined) return false;
    if (!('width' in value) || value['width'] === undefined) return false;
    if (!('height' in value) || value['height'] === undefined) return false;
    if (!('signatureImage' in value) || value['signatureImage'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('uploadedAt' in value) || value['uploadedAt'] === undefined) return false;
    if (!('signType' in value) || value['signType'] === undefined) return false;
    return true;
}

export function SignatureInPDFFromJSON(json: any): SignatureInPDF {
    return SignatureInPDFFromJSONTyped(json, false);
}

export function SignatureInPDFFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignatureInPDF {
    if (json == null) {
        return json;
    }
    return {
        signed: json['signed'],
        'id': json['id'],
        'pdfFileId': json['pdf_file_id'],
        'signerId': json['signer_id'],
        'page': json['page'],
        'x': json['x'],
        'y': json['y'],
        'width': json['width'],
        'height': json['height'],
        'signatureImage': json['signature_image'],
        'createdAt': (new Date(json['created_at'])),
        'uploadedAt': (new Date(json['uploaded_at'])),
        'signType': json['sign_type'],
    };
}

export function SignatureInPDFToJSON(json: any): SignatureInPDF {
    return SignatureInPDFToJSONTyped(json, false);
}

export function SignatureInPDFToJSONTyped(value?: SignatureInPDF | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'pdf_file_id': value['pdfFileId'],
        'signer_id': value['signerId'],
        'page': value['page'],
        'x': value['x'],
        'y': value['y'],
        'width': value['width'],
        'height': value['height'],
        'signature_image': value['signatureImage'],
        'created_at': ((value['createdAt']).toISOString()),
        'uploaded_at': ((value['uploadedAt']).toISOString()),
        'sign_type': value['signType'],
    };
}

