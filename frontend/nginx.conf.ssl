http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 3080;
        server_name ${DOMAIN};
        return 301 https://$host$request_uri;
    }

    server {
        listen 3443 ssl;
        server_name ${DOMAIN};

        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN}/chain.pem;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Serve static files directly
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Optional: Add headers to prevent caching issues
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public";
        }

        # Optional: Add headers for images/media
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            try_files $uri =404;
            expires 1M;
            add_header Cache-Control "public";
        }

        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }
}

events {
    worker_connections 1024;
} 